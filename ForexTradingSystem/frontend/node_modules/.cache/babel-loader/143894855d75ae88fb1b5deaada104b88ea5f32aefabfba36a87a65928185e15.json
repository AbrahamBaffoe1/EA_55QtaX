{"ast":null,"code":"class WebSocketService {\n  constructor(url) {\n    this.url = url;\n    this.socket = null;\n    this.callbacks = {};\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectInterval = 5000;\n  }\n  connect() {\n    this.socket = new WebSocket(this.url);\n    this.socket.onopen = () => {\n      this.reconnectAttempts = 0;\n      console.log('WebSocket connected');\n    };\n    this.socket.onmessage = event => {\n      const message = JSON.parse(event.data);\n      if (this.callbacks[message.type]) {\n        this.callbacks[message.type](message.data);\n      }\n    };\n    this.socket.onclose = () => {\n      console.log('WebSocket disconnected');\n      if (this.reconnectAttempts < this.maxReconnectAttempts) {\n        setTimeout(() => {\n          this.reconnectAttempts++;\n          this.connect();\n        }, this.reconnectInterval);\n      }\n    };\n    this.socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n  }\n  subscribe(eventType, callback) {\n    this.callbacks[eventType] = callback;\n  }\n  unsubscribe(eventType) {\n    delete this.callbacks[eventType];\n  }\n  send(message) {\n    if (this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(message));\n    }\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.close();\n    }\n  }\n}\nconst wsService = new WebSocketService('ws://localhost:5000/ws');\nexport default wsService;","map":{"version":3,"names":["WebSocketService","constructor","url","socket","callbacks","reconnectAttempts","maxReconnectAttempts","reconnectInterval","connect","WebSocket","onopen","console","log","onmessage","event","message","JSON","parse","data","type","onclose","setTimeout","onerror","error","subscribe","eventType","callback","unsubscribe","send","readyState","OPEN","stringify","disconnect","close","wsService"],"sources":["/Users/kwamebaffoe/Desktop/BotFles/ForexTradingSystem/frontend/src/utils/websocketService.js"],"sourcesContent":["class WebSocketService {\n  constructor(url) {\n    this.url = url;\n    this.socket = null;\n    this.callbacks = {};\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectInterval = 5000;\n  }\n\n  connect() {\n    this.socket = new WebSocket(this.url);\n\n    this.socket.onopen = () => {\n      this.reconnectAttempts = 0;\n      console.log('WebSocket connected');\n    };\n\n    this.socket.onmessage = (event) => {\n      const message = JSON.parse(event.data);\n      if (this.callbacks[message.type]) {\n        this.callbacks[message.type](message.data);\n      }\n    };\n\n    this.socket.onclose = () => {\n      console.log('WebSocket disconnected');\n      if (this.reconnectAttempts < this.maxReconnectAttempts) {\n        setTimeout(() => {\n          this.reconnectAttempts++;\n          this.connect();\n        }, this.reconnectInterval);\n      }\n    };\n\n    this.socket.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n  }\n\n  subscribe(eventType, callback) {\n    this.callbacks[eventType] = callback;\n  }\n\n  unsubscribe(eventType) {\n    delete this.callbacks[eventType];\n  }\n\n  send(message) {\n    if (this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(message));\n    }\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.close();\n    }\n  }\n}\n\nconst wsService = new WebSocketService('ws://localhost:5000/ws');\nexport default wsService;\n"],"mappings":"AAAA,MAAMA,gBAAgB,CAAC;EACrBC,WAAWA,CAACC,GAAG,EAAE;IACf,IAAI,CAACA,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAACC,oBAAoB,GAAG,CAAC;IAC7B,IAAI,CAACC,iBAAiB,GAAG,IAAI;EAC/B;EAEAC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACL,MAAM,GAAG,IAAIM,SAAS,CAAC,IAAI,CAACP,GAAG,CAAC;IAErC,IAAI,CAACC,MAAM,CAACO,MAAM,GAAG,MAAM;MACzB,IAAI,CAACL,iBAAiB,GAAG,CAAC;MAC1BM,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAED,IAAI,CAACT,MAAM,CAACU,SAAS,GAAIC,KAAK,IAAK;MACjC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MACtC,IAAI,IAAI,CAACd,SAAS,CAACW,OAAO,CAACI,IAAI,CAAC,EAAE;QAChC,IAAI,CAACf,SAAS,CAACW,OAAO,CAACI,IAAI,CAAC,CAACJ,OAAO,CAACG,IAAI,CAAC;MAC5C;IACF,CAAC;IAED,IAAI,CAACf,MAAM,CAACiB,OAAO,GAAG,MAAM;MAC1BT,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAI,IAAI,CAACP,iBAAiB,GAAG,IAAI,CAACC,oBAAoB,EAAE;QACtDe,UAAU,CAAC,MAAM;UACf,IAAI,CAAChB,iBAAiB,EAAE;UACxB,IAAI,CAACG,OAAO,CAAC,CAAC;QAChB,CAAC,EAAE,IAAI,CAACD,iBAAiB,CAAC;MAC5B;IACF,CAAC;IAED,IAAI,CAACJ,MAAM,CAACmB,OAAO,GAAIC,KAAK,IAAK;MAC/BZ,OAAO,CAACY,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;EACH;EAEAC,SAASA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IAC7B,IAAI,CAACtB,SAAS,CAACqB,SAAS,CAAC,GAAGC,QAAQ;EACtC;EAEAC,WAAWA,CAACF,SAAS,EAAE;IACrB,OAAO,IAAI,CAACrB,SAAS,CAACqB,SAAS,CAAC;EAClC;EAEAG,IAAIA,CAACb,OAAO,EAAE;IACZ,IAAI,IAAI,CAACZ,MAAM,CAAC0B,UAAU,KAAKpB,SAAS,CAACqB,IAAI,EAAE;MAC7C,IAAI,CAAC3B,MAAM,CAACyB,IAAI,CAACZ,IAAI,CAACe,SAAS,CAAChB,OAAO,CAAC,CAAC;IAC3C;EACF;EAEAiB,UAAUA,CAAA,EAAG;IACX,IAAI,IAAI,CAAC7B,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAAC8B,KAAK,CAAC,CAAC;IACrB;EACF;AACF;AAEA,MAAMC,SAAS,GAAG,IAAIlC,gBAAgB,CAAC,wBAAwB,CAAC;AAChE,eAAekC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}