{"ast":null,"code":"var _jsxFileName = \"/Users/kwamebaffoe/Desktop/BotFles/ForexTradingSystem/frontend/src/pages/PortfolioPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchPortfolioData, executeTrade } from '../services/apiService';\nimport PortfolioSummary from '../components/PortfolioSummary';\nimport TradeHistory from '../components/TradeHistory';\nimport styles from '../styles/portfolio.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioPage = () => {\n  _s();\n  const [portfolio, setPortfolio] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadPortfolio = async () => {\n      try {\n        const data = await fetchPortfolioData();\n        setPortfolio(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadPortfolio();\n  }, []);\n  const handleExecuteTrade = async tradeData => {\n    try {\n      const updatedPortfolio = await executeTrade(tradeData);\n      setPortfolio(updatedPortfolio);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading portfolio data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Portfolio Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.summarySection,\n        children: /*#__PURE__*/_jsxDEV(PortfolioSummary, {\n          portfolio: portfolio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.historySection,\n        children: /*#__PURE__*/_jsxDEV(TradeHistory, {\n          trades: portfolio.trades,\n          onExecuteTrade: handleExecuteTrade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioPage, \"wIEPePCbwKw2vZ03aSgo6mr8LA4=\");\n_c = PortfolioPage;\nexport default PortfolioPage;\nvar _c;\n$RefreshReg$(_c, \"PortfolioPage\");","map":{"version":3,"names":["React","useState","useEffect","fetchPortfolioData","executeTrade","PortfolioSummary","TradeHistory","styles","jsxDEV","_jsxDEV","PortfolioPage","_s","portfolio","setPortfolio","loading","setLoading","error","setError","loadPortfolio","data","err","message","handleExecuteTrade","tradeData","updatedPortfolio","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","grid","summarySection","historySection","trades","onExecuteTrade","_c","$RefreshReg$"],"sources":["/Users/kwamebaffoe/Desktop/BotFles/ForexTradingSystem/frontend/src/pages/PortfolioPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchPortfolioData, executeTrade } from '../services/apiService';\nimport PortfolioSummary from '../components/PortfolioSummary';\nimport TradeHistory from '../components/TradeHistory';\nimport styles from '../styles/portfolio.module.css';\n\nconst PortfolioPage = () => {\n  const [portfolio, setPortfolio] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadPortfolio = async () => {\n      try {\n        const data = await fetchPortfolioData();\n        setPortfolio(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadPortfolio();\n  }, []);\n\n  const handleExecuteTrade = async (tradeData) => {\n    try {\n      const updatedPortfolio = await executeTrade(tradeData);\n      setPortfolio(updatedPortfolio);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  if (loading) return <div>Loading portfolio data...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className={styles.container}>\n      <h1>Portfolio Management</h1>\n      \n      <div className={styles.grid}>\n        <div className={styles.summarySection}>\n          <PortfolioSummary portfolio={portfolio} />\n        </div>\n        \n        <div className={styles.historySection}>\n          <TradeHistory \n            trades={portfolio.trades}\n            onExecuteTrade={handleExecuteTrade}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}